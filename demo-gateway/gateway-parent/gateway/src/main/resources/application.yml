server:
  port: 10010 # 网关端口
spring:
  application:
    name: gateway # 服务名称
  cloud:
    nacos:
      server-addr: localhost:8848 # nacos地址
    gateway:
      routes: # 网关路由配置
        - id: userservice # 路由id，自定义，只要唯一即可
          # uri: http://127.0.0.1:8081 # 路由的目标地址 http就是固定地址
          uri: lb://userservice # 路由的目标地址 lb就是负载均衡，后面跟服务名称
          predicates: # 路由断言，也就是判断请求是否符合路由规则的条件
            - Path=/user/** # 这个是按照路径匹配，只要以/user/开头就符合要求
          filters:
            - AddRequestHeader=name, zixieqing
        - id: userservice
          uri: lb://userservice
          predicates:
            - Path=/user/**
#      default-filters:
#        # 全局过滤器
#        - AddRequestHeader=name, zixieqing
          # 局部跨域，将CORS作为元数据来实现
#          metadata:
#            cors
#            allowedOrigins: '*'
#            allowedMethods:
#              - GET
#              - POST
#            allowedHeaders: '*'
#            maxAge: 30
      globalcors: # 全局的跨域处理
        add-to-simple-url-handler-mapping: true # 解决options请求被拦截问题。CORS跨域浏览器会问服务器可不可以跨域，而这种请求是options，网关默认会拦截这种请求
        corsConfigurations:
          '[/**]': # 拦截哪些请求，此处为拦截所有请求，即凡是进入网关的请求都拦截
            allowedOrigins: # 允许哪些网站的跨域请求
              - "HTTP://LOCALHOST:8090"
            allowedMethods: # 允许的跨域ajax的请求方式
              - "GET"
              - "POST"
              - "DELETE"
              - "PUT"
              - "OPTIONS"
            allowedHeaders: "*" # 允许在请求中携带的头信息
            allowCredentials: true # 是否允许携带cookie
            maxAge: 360000 # 这次跨域检测的有效期是多少秒。每次跨域都要询问一次服务器，这会浪费一定性能，因此加入有效期